name: Deploy Next.js to UpCloud

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Setup Node.js in GitHub Actions
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Deploy to Server
        run: |
          ssh root@${{ secrets.SERVER_IP }} << 'EOF'
            cd /var/www/payload
            
            git pull origin main
            
            if [ ! -f .env ]; then
              cp .env.example .env
              sed -i 's/YOUR_SECRET_HERE/${{ secrets.PAYLOAD_SECRET }}/g' .env
            fi

            # Load NVM and use Node.js
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 22 || nvm install 22
            
            # Verify Node.js is available
            node -v
            npm -v
            
            # Continue with deployment
            export PNPM_HOME="$HOME/.local/share/pnpm"
            export PATH="$PNPM_HOME:$PATH"
            
            # Install pnpm if not available
            if ! command -v pnpm &> /dev/null; then
              echo "Installing pnpm..."
              npm install -g pnpm
            fi
            
            pnpm install --frozen-lockfile
            
            rm -rf .next
            
            pnpm build
            
            pnpm payload migrate
            
            # Install PM2 if not available
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              npm install -g pm2
            fi
            
            pm2 restart pnpm
          EOF
